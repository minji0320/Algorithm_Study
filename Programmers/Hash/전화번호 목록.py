### 문제 설명
# 전화번호부에 적힌 전화번호 중, 한 번호가 다른 번호의 접두어인 경우가 있는지 확인하려 합니다.
# 전화번호가 다음과 같을 경우, 구조대 전화번호는 영석이의 전화번호의 접두사입니다.

# 구조대 : 119
# 박준영 : 97 674 223
# 지영석 : 11 9552 4421
# 전화번호부에 적힌 전화번호를 담은 배열 phone_book 이 solution 함수의 매개변수로 주어질 때,
# 어떤 번호가 다른 번호의 접두어인 경우가 있으면 false를 그렇지 않으면 true를 return 하도록 solution 함수를 작성해주세요.

### 제한 사항
# phone_book의 길이는 1 이상 1,000,000 이하입니다.
# 각 전화번호의 길이는 1 이상 20 이하입니다.
# 같은 전화번호가 중복해서 들어있지 않습니다.

### 입출력 예제
# phone_book	return
# ["119", "97674223", "1195524421"]	false
# ["123","456","789"]	true
# ["12","123","1235","567","88"]	false

### 입출력 예 설명
## 입출력 예 #1
# 앞에서 설명한 예와 같습니다.
## 입출력 예 #2
# 한 번호가 다른 번호의 접두사인 경우가 없으므로, 답은 true입니다.
## 입출력 예 #3
# 첫 번째 전화번호, “12”가 두 번째 전화번호 “123”의 접두사입니다. 따라서 답은 false입니다.

def solution(phone_book):
    phone_book.sort()
    n = len(phone_book)
    for i in range(n - 1):
        if phone_book[i + 1].startswith(phone_book[i]):
            return False
    return True

### 정확성  테스트
# 테스트 1 〉	통과 (0.01ms, 10MB)
# 테스트 2 〉	통과 (0.01ms, 10.2MB)
# 테스트 3 〉	통과 (0.00ms, 10.3MB)
# 테스트 4 〉	통과 (0.01ms, 10.1MB)
# 테스트 5 〉	통과 (0.01ms, 10.2MB)
# 테스트 6 〉	통과 (0.00ms, 10.2MB)
# 테스트 7 〉	통과 (0.01ms, 10.1MB)
# 테스트 8 〉	통과 (0.01ms, 10.2MB)
# 테스트 9 〉	통과 (0.00ms, 10.1MB)
# 테스트 10 〉	통과 (0.01ms, 10.1MB)
# 테스트 11 〉	통과 (0.00ms, 10.1MB)
# 테스트 12 〉	통과 (0.00ms, 10.1MB)
# 테스트 13 〉	통과 (0.01ms, 10.2MB)
# 테스트 14 〉	통과 (0.38ms, 10.2MB)
# 테스트 15 〉	통과 (0.67ms, 10.3MB)
# 테스트 16 〉	통과 (1.02ms, 10.3MB)
# 테스트 17 〉	통과 (1.02ms, 10.3MB)
# 테스트 18 〉	통과 (0.87ms, 10.2MB)
# 테스트 19 〉	통과 (0.88ms, 10.4MB)
# 테스트 20 〉	통과 (1.50ms, 10.4MB)

### 효율성  테스트
# 테스트 1 〉	통과 (3.23ms, 10.8MB)
# 테스트 2 〉	통과 (3.23ms, 10.8MB)
# 테스트 3 〉	통과 (102.73ms, 30.7MB)
# 테스트 4 〉	통과 (81.66ms, 28.1MB)