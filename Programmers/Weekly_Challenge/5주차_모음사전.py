vowels = ['A', 'E', 'I', 'O', 'U']

def get_next(now, now_len):
    next_idx = vowels.index(now[now_len - 1]) + 1
    if next_idx == 5:
        now.pop()
        return get_next(now, now_len - 1)

    now[now_len - 1] = vowels[next_idx]
    return now

def solution(word):
    temp_word = ['A']
    cnt = 1

    while True:
        if word == ''.join(temp_word):
            return cnt

        now_len = len(temp_word)
        if now_len < 5:
            temp_word.append('A')
        else:
            temp_word = get_next(temp_word, now_len)

        cnt += 1

# 정확성  테스트 -> 규칙 찾기 필요
# 테스트 1 〉	통과 (0.00ms, 10.1MB)
# 테스트 2 〉	통과 (0.10ms, 10.2MB)
# 테스트 3 〉	통과 (1.27ms, 10MB)
# 테스트 4 〉	통과 (1.75ms, 10.2MB)
# 테스트 5 〉	통과 (1.26ms, 10.2MB)
# 테스트 6 〉	통과 (0.35ms, 10.1MB)
# 테스트 7 〉	통과 (1.51ms, 10.1MB)
# 테스트 8 〉	통과 (0.47ms, 10.1MB)
# 테스트 9 〉	통과 (0.66ms, 10.1MB)
# 테스트 10 〉	통과 (0.34ms, 10.1MB)
# 테스트 11 〉	통과 (1.28ms, 10MB)
# 테스트 12 〉	통과 (0.42ms, 10.2MB)
# 테스트 13 〉	통과 (0.88ms, 10.3MB)
# 테스트 14 〉	통과 (0.94ms, 10.2MB)
# 테스트 15 〉	통과 (1.32ms, 10.1MB)
# 테스트 16 〉	통과 (0.64ms, 10.2MB)
# 테스트 17 〉	통과 (1.32ms, 10.2MB)
# 테스트 18 〉	통과 (0.49ms, 10.2MB)
# 테스트 19 〉	통과 (1.38ms, 10.1MB)
# 테스트 20 〉	통과 (0.29ms, 10.1MB)
# 테스트 21 〉	통과 (0.01ms, 10.3MB)
# 테스트 22 〉	통과 (0.26ms, 10.2MB)
# 테스트 23 〉	통과 (0.07ms, 10.2MB)
# 테스트 24 〉	통과 (0.34ms, 10.2MB)
# 테스트 25 〉	통과 (0.07ms, 10MB)
# 테스트 26 〉	통과 (0.36ms, 10.2MB)
# 테스트 27 〉	통과 (1.64ms, 10.1MB)
# 테스트 28 〉	통과 (1.60ms, 10.2MB)
# 테스트 29 〉	통과 (0.02ms, 10.2MB)
# 테스트 30 〉	통과 (0.14ms, 10.1MB)
# 테스트 31 〉	통과 (0.59ms, 10.1MB)
# 테스트 32 〉	통과 (0.99ms, 10.2MB)
# 테스트 33 〉	통과 (1.64ms, 10.2MB)
# 테스트 34 〉	통과 (1.19ms, 10.2MB)
# 테스트 35 〉	통과 (1.66ms, 10.1MB)
# 테스트 36 〉	통과 (1.38ms, 10.2MB)
# 테스트 37 〉	통과 (0.34ms, 10.1MB)
# 테스트 38 〉	통과 (0.85ms, 10.1MB)
# 테스트 39 〉	통과 (0.79ms, 10.3MB)
# 테스트 40 〉	통과 (0.44ms, 10.2MB)

def solution(word):
    vowels = ['A', 'E', 'I', 'O', 'U']
    d = [781, 156, 31, 6, 1]
    answer = 0

    for i, vowel in enumerate(word):
        answer += 1 + d[i] * (vowels.index(vowel))

    return answer

# 정확성  테스트
# 테스트 1 〉	통과 (0.01ms, 10.2MB)
# 테스트 2 〉	통과 (0.00ms, 10.2MB)
# 테스트 3 〉	통과 (0.00ms, 10MB)
# 테스트 4 〉	통과 (0.00ms, 10.2MB)
# 테스트 5 〉	통과 (0.00ms, 10.2MB)
# 테스트 6 〉	통과 (0.00ms, 10.2MB)
# 테스트 7 〉	통과 (0.00ms, 10.1MB)
# 테스트 8 〉	통과 (0.00ms, 10.3MB)
# 테스트 9 〉	통과 (0.00ms, 10.3MB)
# 테스트 10 〉	통과 (0.00ms, 10.1MB)
# 테스트 11 〉	통과 (0.01ms, 10.2MB)
# 테스트 12 〉	통과 (0.00ms, 10MB)
# 테스트 13 〉	통과 (0.00ms, 10.2MB)
# 테스트 14 〉	통과 (0.00ms, 10.1MB)
# 테스트 15 〉	통과 (0.00ms, 10.2MB)
# 테스트 16 〉	통과 (0.00ms, 10.1MB)
# 테스트 17 〉	통과 (0.00ms, 10.2MB)
# 테스트 18 〉	통과 (0.00ms, 10MB)
# 테스트 19 〉	통과 (0.01ms, 10.3MB)
# 테스트 20 〉	통과 (0.00ms, 10MB)
# 테스트 21 〉	통과 (0.00ms, 10.2MB)
# 테스트 22 〉	통과 (0.00ms, 10.2MB)
# 테스트 23 〉	통과 (0.00ms, 10MB)
# 테스트 24 〉	통과 (0.00ms, 10.1MB)
# 테스트 25 〉	통과 (0.00ms, 10.3MB)
# 테스트 26 〉	통과 (0.00ms, 10.2MB)
# 테스트 27 〉	통과 (0.00ms, 10.1MB)
# 테스트 28 〉	통과 (0.01ms, 10.2MB)
# 테스트 29 〉	통과 (0.01ms, 10.2MB)
# 테스트 30 〉	통과 (0.01ms, 10.1MB)
# 테스트 31 〉	통과 (0.00ms, 10MB)
# 테스트 32 〉	통과 (0.00ms, 10.2MB)
# 테스트 33 〉	통과 (0.00ms, 10.3MB)
# 테스트 34 〉	통과 (0.00ms, 10.2MB)
# 테스트 35 〉	통과 (0.00ms, 10.2MB)
# 테스트 36 〉	통과 (0.00ms, 10.2MB)
# 테스트 37 〉	통과 (0.00ms, 10MB)
# 테스트 38 〉	통과 (0.00ms, 9.98MB)
# 테스트 39 〉	통과 (0.01ms, 10.2MB)
# 테스트 40 〉	통과 (0.00ms, 10.1MB)
